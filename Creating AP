#!/bin/bash

txtrst=$(tput sgr0) # text reset
txtred=$(tput setaf 196) # Red
txtblu=$(tput setaf 214) # Amber
txtgrn=$(tput setaf 10) # Green

echo -e "${txtgrn}[!] ENTER ROOT PASSWORD [!]"
if [ $(id -u) -ne 0 ]; then
	echo "${txtred}This must be ran as root you hear ME!!"
	exit 1
fi
echo "${txtgrn}*************************\n****Welcome-PiFi-AD-HOC-Setup****\n************************"
echo -e "Select Interface [!]"
read -e INTER;
echo -e "${txtamber}STOP Networking service"
/etc/init.d/networking stop
echo -e "${txtamber}STOP Network-Manager"
/etc/init.d/network-manager stop
echo -e "${txtamber}STOPPING WLAN1"
ifconfig $INTER down
echo -e "${txtamber}Backing up interfaces File [!]"
sudo cp /etc/network/interfaces /etc/network/interfaces.orig
echo -e "${txtgrn}Setup static IP, subnet mask, broadcast address with DHCP"
cat >> /etc/network/interfaces <<EOF
# interfaces(5) file used by ifup(8) and ifdown(8)

# Please note that this file is written to be used with dhcpcd
# For static IP, consult /etc/dhcpcd.conf and 'man dhcpcd.conf'

# Include files from /etc/network/interfaces.d:
source-directory /etc/network/interfaces.d

auto lo
iface lo inet loopback

iface eth0 inet dhcp

auto wlan0
iface wlan0 inet static
  address 192.168.1.42
  netmask 255.255.255.0
  wireless-channel 1
  wireless-essid PiFi
  wireless-mode ad-hoc
EOF
echo -e "${txtgrn}Adding default Gateway route to Interface"
route add default gw 10.1.1.1 $INTER
sleep 2
route -n
sleep 2
ifconfig $INTER up
/etc/init.d/networking start
/etc/init.d/network-manager start
sleep 2
echo -e "${txtgrn}~~[!]~All~Done~[!]~~"
read -r -p "${txtamber}when ready to exit and restore setting orginal" enter
if ! [[ $confirm =~ ^([yY][eE][sS]|[yY])$ ]]
then
	exit 1
fi
echo -p "${txtamber}~~[!]Deleting & Restoring Detabase"
route del -net 10.1.1.1/24 gw 10.1.1.1 $INTER
rm /etc/network/interfaces
mv /etc/network/interfaces.orig /etc/network/interfaces
ifconfig $INTER down
/etc/innit.d/network-manager restart
/etc/innit.d/networking restart
ifconfig $WLAN up
sleep 10
exit

cat >> /etc/wpa_supplicant/wpa_supplicant.conf <<EOF
network={
    ssid="PiFi"
    mode=1
    frequency=2432
    proto=RSN
    key_mgmt=WPA-PSK
    pairwise=CCMP
    group=CCMP
    psk="GexxaJ0K3er"

/etc/wpa_supplicant-adhoc.conf
ctrl_interface=DIR=/run/wpa_supplicant GROUP=wheel

# use 'ap_scan=2' on all devices connected to the network
# this is unnecessary if you only want the network to be created when no other networks are available
ap_scan=2

network={
    ssid="PiFi"
    mode=1
    frequency=2432
    proto=RSN
    key_mgmt=WPA-PSK
    pairwise=CCMP
    group=CCMP
    psk="GexxaJ0K3er"
}
EOF'
